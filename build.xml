<?xml version="1.0" encoding="utf-8"?>
<project default="compile">

  <!-- build.xml for Mantis issue
       name: P.Conrad for CS56, W11 -->

  <property environment="env"/> <!-- load the environment variables --> 
  <property name="author" value="mastergberry" />
  <property name="webRoot" value="${env.HOME}/public_html/" />
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/" />
  <property name="course" value="cs56" />
  <property name="topic" value="games" />
  <property name="description" value="client_server.v2.Controllers" />
  <property name="clientName" value="JavaClient" />
  <property name="serverName" value="JavaServer" />
  <property name="projectName" value="${clientName}" />
  <property name="clientClass" value="edu.ucsb.${course}.${topic}.${description}.${clientName}" />
  <property name="serverClass" value="edu.ucsb.${course}.${topic}.${description}.${serverName}" />


  <property name="projectPath" value="${course}/${topic}/${description}" />
  <property name="package" value="edu/ucsb/${course}/${topic}/${description}" />
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" /> 
  <property name="javadocURL" value="${webBaseUrl}/${projectPath}/javadoc" /> 
  <property name="jwsDest" value="${webRoot}/${projectPath}/jws" /> 
  <property name="jwsURL" value="${webBaseUrl}/${projectPath}/jws" />

  <target name="compile" >
    <mkdir dir="build" />
    <!-- <mkdir dir="build/${package}/graphics" />
	<copy todir="build/${package}/graphics">
		<fileset dir="graphics" includes="**" />
	</copy> -->
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source">
	    <classpath>
			<pathelement location="build"/>
			<pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
	    </classpath>
    </javac>

  </target>

  <target name="run-client" depends="compile">
    <java classname="${clientClass}" classpath="build" fork="true"/>
  </target>

  <target name="run-server" depends="compile">
    <java classname="${serverClass}" classpath="build" fork="true" />
  </target>
  <target name="sign" depends="jar">
    <signjar jar="dist/${clientName}.jar" signedjar="dist/${clientName}.jar" alias="alias" storepass="060692" verbose="true"/>
    <signjar jar="dist/${serverName}.jar" signedjar="dist/${serverName}.jar" alias="alias" storepass="060692" verbose="true"/>
  </target>
  
  <target name="jar" depends="compile">
    <jar destfile="dist/JavaClient.jar" basedir="build">
      <fileset dir=".">
	<!--<include name="graphics/*.png" /> -->
      </fileset>
      <manifest>
	<attribute name="Main-Class" value="${clientClass}" />
      </manifest>
    </jar>
    
    <jar destfile="dist/JavaServer.jar" basedir="build">
      <manifest>
	<attribute name="Main-Class" value="${serverClass}" />
      </manifest>
    </jar>
    
  </target>
  
  <target name="clean" >
    <delete dir="build" quiet="true" />
    <delete dir="bin" quiet="true" /> <!-- Eclipse Debug Folder -->
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />
    <delete dir="download" quiet="true" />
    <delete dir="temp" quiet="true" />
    <delete file="numberedsource.txt" quiet="true"/>
  </target>

  <target name="javadoc" depends="compile"> 
    
    <delete dir="javadoc" quiet="true" /> 
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >  
      <fileset dir="src" includes="**/*.java"/>  
      <classpath>
	<pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
      </classpath>
    </javadoc>

    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" /> 

    <!-- copy everything you just made to the javadoc destination, and then make it readable --> 
    
    <copy todir="${javadocDest}" > 
      <fileset dir="javadoc"/> 
    </copy> 
    
    <!-- Note: this only does the chmod command on the 
	 javadoc subdirectory and its contents.  You MIGHT have to
	 MANUALLY do the chmod on the parent directories.  However,
	 you should only need to do that once. --> 
    
    <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" /> 
    <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" /> 
    <echo>Javadoc deployed to ${javadocURL}</echo> 

  </target>

  <target name="dist" depends="jar,sign"> 
    
    <delete quiet="true"> 
      <fileset dir="temp" includes="**/*" />  
      <fileset dir="download" includes="**/*" />  
    </delete> 
    
    <mkdir dir="download" /> 
    <mkdir dir="temp" />  
    <mkdir dir="temp/${projectName}" /> 
    
    <copy todir="temp/${projectName}"> 
      <fileset dir="." 
	       excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/> 
    </copy> 
    
    <tar destfile="temp/${projectName}.tar"
	 basedir="temp"
	 includes="${projectName}/**" 
	 /> 
    
    <gzip zipfile="download/${projectName}.tgz" 
	  src="temp/${projectName}.tar" /> 
    
    <zip destfile="download/${projectName}.zip"
	 basedir="temp"
	 includes="${projectName}/**"
	 /> 
    
    <delete quiet="true"> 
      <fileset dir="temp" includes="**/*"/>  
    </delete> 
    
  </target> 
  
  <target name="publish" depends="jar,javadoc,dist,jws,linenumbers">
    <mkdir dir="${webRoot}/${projectPath}" />
    
    <delete dir="${webRoot}/${projectPath}/browse" />
    <mkdir dir="${webRoot}/${projectPath}/browse" />

    <delete dir="${webRoot}/${projectPath}/download" />
    <mkdir dir="${webRoot}/${projectPath}/download" />

    <copy file="html/index.html" todir="${webRoot}/${projectPath}"/>

    <copy todir="${webRoot}/${projectPath}/download" > 
      <fileset dir="download"/> 
      <fileset dir="dist" />
    </copy> 

    <copy file="build.xml" todir="${webRoot}/${projectPath}/browse" />
    <copy file="numberedsource.txt" todir="${webRoot}/${projectPath}/browse" />

    <copy todir="${webRoot}/${projectPath}/browse/src" > 
      <fileset dir="src"/> 
    </copy> 

    <chmod dir="${webRoot}/${projectPath}" 
	   perm="755" type="both" includes="**/*"/>

    <echo>Project published to ${webBaseUrl}/${projectPath}</echo>
    <copy file="numberedsource.txt" todir="${webRoot}/${projectName}/browse"/>
  </target>

  <target name="jws" depends="compile,jar,sign">
    <delete dir="${webRoot}/${projectName}/jws" />
    <mkdir dir="${webRoot}/${projectName}/jws" />
    <copy todir="${jwsDest}" file="dist/JavaClient.jar" />
    <copy todir="${jwsDest}" file="dist/JavaServer.jar" />
    <copy todir="${jwsDest}" >
      <fileset dir="jws" includes="*.html"/>
      <fileset dir="jws" includes="*.jnlp"/>
      <fileset dir="jws" includes="*.png"/>
      <fileset dir="jws" includes=".htaccess"/>
    </copy>
    <echo>Java web start at ${jwsURL}</echo>
  </target>


  <target name="linenumbers" description="Creates a file containing all source files with line numbers">
    <exec executable="bash">
      <arg value="-c"/>
      <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>
    </exec>
  </target>

</project>
